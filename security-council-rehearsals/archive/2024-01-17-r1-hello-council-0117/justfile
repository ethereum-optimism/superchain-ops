set dotenv-load

simulate hdPath='0':
  #!/usr/bin/env bash
  here=$(pwd)
  cd ../..
  echo "getting signer address..."
  if [ t"$SIMULATE_WITHOUT_LEDGER" == t1 ]
  then
    signer="0xc49d46E3F834f5C9856A7FcBEB185baD052c98e7"
  else
    signer=$(cast wallet address --ledger --mnemonic-derivation-path "m/44'/60'/{{hdPath}}'/0/0")
  fi
  echo "Simulating with: ${signer}"
  echo ""
  export OWNER_SAFE=${COUNCIL_SAFE}
  forge build
  forge script SignFromJson --via-ir --rpc-url ${ETH_RPC_URL} \
    --sig "signJson(string)" "${here}/input.json" \
    --sender ${signer}

sign hdPath='0':
  #!/usr/bin/env bash
  here=$(pwd)
  cd ../..
  echo "getting signer address..."
  signer=$(cast wallet address --ledger --mnemonic-derivation-path "m/44'/60'/{{hdPath}}'/0/0")
  echo "Signing with: ${signer}"
  echo ""
  export OWNER_SAFE=${COUNCIL_SAFE}
  forge build
  $(go env GOPATH)/bin/eip712sign --ledger --hd-paths "m/44'/60'/{{hdPath}}'/0/0" -- \
    forge script SignFromJson --via-ir --rpc-url ${ETH_RPC_URL} \
    --sig "signJson(string)" "${here}/input.json"

execute hdPath='0':
  #!/usr/bin/env bash
  here=$(pwd)
  cd ../..
  sender=$(cast wallet address --ledger --mnemonic-derivation-path "m/44'/60'/{{hdPath}}'/0/0")
  export OWNER_SAFE=${COUNCIL_SAFE}
  forge build
  forge script --fork-url ${ETH_RPC_URL} SignFromJson \
  --sig "runJson(string,bytes)" ${here}/input.json ${SIGNATURES} \
  --ledger --hd-paths "m/44'/60'/{{hdPath}}'/0/0" --broadcast \
  --sender ${sender}

deploy-contracts hdPath='0':
  #!/usr/bin/env bash
  here=$(pwd)
  cd ../..
  sender=$(cast wallet address --ledger --mnemonic-derivation-path "m/44'/60'/{{hdPath}}'/0/0")
  forge build
  forge script DeployHelloWorld --rpc-url ${ETH_RPC_URL} \
    --ledger --hd-paths "m/44'/60'/{{hdPath}}'/0/0" --broadcast \
    --sig 'run(address)' $COUNCIL_SAFE \
    --sender ${sender}

prepare-json:
  #!/usr/bin/env bash

  jq ".transactions[0].to |= \"${HelloWorld_ADDRESS}\"" ./input.json > ./input.tmp && mv input.tmp input.json
