set dotenv-load

export rpcUrl := env_var_or_default('ETH_RPC_URL', "https://ethereum.publicnode.com")
export signatures := env_var_or_default('SIGNATURES', '')
export councilSafe := env_var('COUNCIL_SAFE')
export foundationSafe := env_var('FOUNDATION_SAFE')
export ownerSafe := env_var('OWNER_SAFE')
export bundle := "input"
export location := `pwd`
export randomPersonEoa := "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"

simulate-council hdPath='0':
  #!/usr/bin/env bash
  cd ../..
  echo "getting signer address..."
  signer=$(cast wallet address --ledger --mnemonic-derivation-path "m/44'/60'/{{hdPath}}'/0/0")
  echo "Simulating with: ${signer}"
  echo ""
  forge script NestedSignFromJson \
    --rpc-url ${rpcUrl} \
    --sender ${signer} \
    --sig "signJson(string,address)" \
    "${location}/${bundle}.json" \
    "${councilSafe}"

sign-council hdPath='0':
  #!/usr/bin/env bash
  cd ../..
  echo "getting signer address..."
  signer=$(cast wallet address --ledger --mnemonic-derivation-path "m/44'/60'/{{hdPath}}'/0/0")
  echo "Signing with: ${signer}"
  echo ""
  $(go env GOPATH)/bin/eip712sign --ledger --hd-paths "m/44'/60'/{{hdPath}}'/0/0" -- \
  forge script NestedSignFromJson \
    --rpc-url ${rpcUrl} \
    --sig "signJson(string,address)" \
    "${location}/${bundle}.json" \
    "${councilSafe}"

execute-council hdPath='0':
  #!/usr/bin/env bash
  cd ../..
  sender=$(cast wallet address --ledger --mnemonic-derivation-path "m/44'/60'/{{hdPath}}'/0/0")
  forge script NestedSignFromJson \
    --fork-url ${rpcUrl} \
    --ledger --hd-paths "m/44'/60'/{{hdPath}}'/0/0" \
    --broadcast \
    --sender ${sender} \
    --sig "approveJson(string,address,bytes)" \
    ${location}/${bundle}.json \
    "${councilSafe}" \
    ${signatures}

simulated-run hdPath='0':
  #!/usr/bin/env bash
  cd ../..
  forge script NestedSignFromJson \
    --fork-url ${rpcUrl} \
    --sender ${randomPersonEoa} \
    --sig "runJson(string)" \
    ${location}/${bundle}.json

deploy-contracts hdPath='0':
  #!/usr/bin/env bash
  cd ../..
  sender=$(cast wallet address --trezor --mnemonic-derivation-path "m/44'/60'/{{hdPath}}'/0/0")
  forge script DeployRehearsalContracts \
    --fork-url ${rpcUrl} \
    --trezor --hd-paths "m/44'/60'/{{hdPath}}'/0/0" \
    --broadcast \
    --sender ${sender}
  
